#!/usr/bin/env bash
set -euo pipefail; PROJECT_DIR="$HOME/k1w1ProPlus"; ANDROID_SDK_ROOT="$HOME/android-sdk"; CMAKE_INSTALL="$HOME/cmake-3.22.1"; G=$(tput setaf 2); N=$(tput sgr0); log(){ echo "${G}[INFO]${N} $*";}; log "System ready"; apt update -qq && apt install -y build-essential wget unzip openjdk-17-jdk curl git libssl-dev 2>/dev/null||true; [ -f "$CMAKE_INSTALL/bin/cmake" ] || { log "Bootstrap CMake 3.22.1 (ARM64) ..."; mkdir -p "$HOME/cmake-build"; cd "$HOME/cmake-build"; wget -q https://github.com/Kitware/CMake/releases/download/v3.22.1/cmake-3.22.1.tar.gz; tar xf cmake-3.22.1.tar.gz; cd cmake-3.22.1; ./bootstrap --prefix="$CMAKE_INSTALL" --parallel=$(nproc) -- -DCMAKE_USE_OPENSSL=OFF; make -j$(nproc); make install; }; mkdir -p "$ANDROID_SDK_ROOT/cmake/3.22.1/bin"; ln -sf "$CMAKE_INSTALL/bin/cmake" "$ANDROID_SDK_ROOT/cmake/3.22.1/bin/cmake"; ln -sf "$CMAKE_INSTALL/bin/ctest" "$ANDROID_SDK_ROOT/cmake/3.22.1/bin/ctest"; ln -sf "$CMAKE_INSTALL/bin/cpack" "$ANDROID_SDK_ROOT/cmake/3.22.1/bin/cpack"; export PATH="$CMAKE_INSTALL/bin:$PATH"; log "SDK einrichten ..."; mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"; [ -f "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager" ] || { wget -q -O "$ANDROID_SDK_ROOT/cmdline-tools.zip" https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip; unzip -qo "$ANDROID_SDK_ROOT/cmdline-tools.zip" -d "$ANDROID_SDK_ROOT/cmdline-tools"; mv "$ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools" "$ANDROID_SDK_ROOT/cmdline-tools/latest"; rm "$ANDROID_SDK_ROOT/cmdline-tools.zip"; }; export ANDROID_HOME="$ANDROID_SDK_ROOT"; export PATH="$PATH:$ANDROID_HOME/cmdline-tools/latest/bin:$ANDROID_HOME/platform-tools"; yes | sdkmanager --licenses >/dev/null 2>&1||true; sdkmanager "platform-tools" "platforms;android-36" "build-tools;36.0.0" >/dev/null; log "Projekt prÃ¼fen ..."; [ -d "$PROJECT_DIR" ] || mkdir -p "$PROJECT_DIR"; cd "$PROJECT_DIR"; [ -f package.json ] || { command -v pnpm >/dev/null||npm i -g pnpm; pnpm create expo-app . --template blank; }; [ -f .npmrc ] || echo "node-linker=hoisted" >.npmrc; pnpm install; [ -f generate-assets.sh ] || { echo '#!/bin/bash\necho "Assets OK"' >generate-assets.sh; chmod +x generate-assets.sh; }; ./generate-assets.sh; log "Prebuild ..."; npx expo prebuild --platform android --clean --no-install; echo "sdk.dir=$ANDROID_HOME" >android/local.properties; log "BAUE APK ..."; cd android; ./gradlew clean; ./gradlew assembleRelease -Pandroid.cmake.path="$ANDROID_SDK_ROOT/cmake/3.22.1/bin/cmake" -Pandroid.cmake.version=3.22.1 --no-daemon --max-workers=1; APK="$PROJECT_DIR/android/app/build/outputs/apk/release/app-release.apk"; [ -f "$APK" ] && log "FERTIG: $APK" || { echo "APFehler"; exit 1; }
